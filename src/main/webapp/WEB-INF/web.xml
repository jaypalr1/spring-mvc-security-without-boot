<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

  <!--<web-app>-->
  <display-name>Spring Web MVC Security Application without boot</display-name>


  <!-- Dispatcher Servlet config -->
  <servlet>
    <servlet-name>CustomDispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>


    <!-- Passing main config file to Dispatcher servlet -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>WEB-INF/dispatcher-servlet-config.xml</param-value>
    </init-param>

    <load-on-startup>1</load-on-startup> <!-- Purpose?? -->
  </servlet>
  <servlet-mapping>
    <servlet-name>CustomDispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern> <!-- What type of URLs the DispatcherServlet will handle? -->
  </servlet-mapping>


  <!--
      <welcome-file-list>
        &lt;!&ndash;    This custom welcome page only works if associated with a '/' controller.
        Without this controller this setting doesn't work.
        If we enable this setting and do not provide the associated controller then a 404 error is displayed &ndash;&gt;
        <welcome-file>CustomWelcomePage.jsp</welcome-file>
      </welcome-file-list>
  -->


  <!-- Security config -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/spring/*.xml</param-value>
  </context-param>
  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <!--    Apply security to everything-->
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <listener>
    <!-- Lister for session management -->
    <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher
    </listener-class>
  </listener>
</web-app>
